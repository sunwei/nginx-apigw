log_format api.oneapi.cc '$remote_addr - $remote_user [$time_local] "$request"'
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent"'
                    '"$http_x_forwarded_for" "$api_name"';

map $http_apikey $api_client_name {
    default "";

    "7B5zIqmRGXmrJTFmKa99vcit" "client_one";
    "QzVV6y1EmQFbbxOfRCwyJs35" "client_two";
    "mGcjH8Fv6U9y3BVF9H3Ypb9T" "client_six";
}

upstream warehouse_inventory {
    zone warehouse_inventory_service 64k;
    server 10.0.0.1:80;
    server 10.0.0.2:80;
    server 10.0.0.3:80;
}
upstream warehouse_pricing {
    zone warehouse_pricing_service 64k;
    server 10.0.0.1:80;
    server 10.0.0.2:80;
    server 10.0.0.3:80;
}

server {
    set $api_name -;
    access_log /var/log/nginx/api_access.log api.oneapi.cc;

    listen 80;
    listen 443 ssl;
    server_name api.oneapi.cc;

    # TLS config
    ssl_certificate      /app/cert/oneapi.cc.crt;
    ssl_certificate_key  /app/cert/oneapi.cc.key;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_protocols        TLSv1.1 TLSv1.2;

    # API definitions, one per file
    location /api/warehouse/inventory {
        
        set $upstream warehouse_inventory;
        rewrite ^ /_warehouse last;
    }
    location /api/warehouse/pricing {
        
        set $upstream warehouse_pricing;
        rewrite ^ /_warehouse last;
    }
    location = /_warehouse {
        internal;
        set $api_name Warehouse;
        proxy_pass http://$upstream$request_uri;
    }

    # Error responses
    error_page 404 = @400;         # Invalid paths are treated as bad requests
    proxy_intercept_errors on;     # Do not send backend errors to the client
    include error_page.conf;       # API client friendly JSON error responses
    default_type application/json; # If no content-type then assume JSON
}
